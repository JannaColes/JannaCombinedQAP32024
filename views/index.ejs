<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Students</title>
    <link rel="stylesheet" href="/styles/style.css">
</head>
<body>
  <h1>List of Students</h1>
  <ul id="students-list">
    <% students.forEach(student => { %>
        <li>
            <strong>Name:</strong> <%= student.first_name %> <%= student.last_name %><br>
            <strong>Email:</strong> <%= student.email %><br>
            <strong>Phone:</strong> <%= student.phone %><br>
            <strong>Age:</strong> <%= student.age %> years old<br>
            <strong>Date of Birth:</strong> 
<% let dob = new Date(student.dob); %>
<%= dob.toLocaleDateString() %><br>
            <button onclick="editStudent('<%= student.id %>')">Edit</button>
            <button onclick="deleteStudent('<%= student.id %>')">Delete</button>
        </li>
    <% }) %>
  </ul>


    <h2>Add New Student</h2>
    <form id="add-student-form" action="/api/students" method="POST">
        <label for="first_name">First Name:</label>
        <input type="text" id="first_name" name="first_name" required><br>

        <label for="last_name">Last Name:</label>
        <input type="text" id="last_name" name="last_name" required><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br>

        <label for="phone">Phone:</label>
        <input type="text" id="phone" name="phone" required><br>

        <label for="age">Age:</label>
        <input type="number" id="age" name="age" required><br>

        <label for="dob">Date of Birth:</label>
        <input type="date" id="dob" name="dob" required><br>

        <button type="submit">Add Student</button>
    </form>

    <h2>Edit Student</h2>
<form id="edit-student-form">
    <label for="edit-first_name">First Name:</label>
    <input type="text" id="edit-first_name" name="first_name" ><br>

    <label for="edit-last_name">Last Name:</label>
    <input type="text" id="edit-last_name" name="last_name" ><br>

    <label for="edit-email">Email:</label>
    <input type="email" id="edit-email" name="email" ><br>

    <label for="edit-phone">Phone:</label>
    <input type="text" id="edit-phone" name="phone" ><br>

    <label for="edit-age">Age:</label>
    <input type="number" id="edit-age" name="age" ><br>

    <label for="edit-dob">Date of Birth:</label>
    <input type="date" id="edit-dob" name="dob" ><br>

    <button type="submit">Update Student</button>
</form>

<script>
  // Get the form element
  const form = document.getElementById('update-student-form');

  // Add an event listener for the form's submit event
  form.addEventListener('submit', function(event) {
    // Prevent the form's default submit behavior
    event.preventDefault();

    // Get the form data
    const formData = new FormData(form);

    // Convert the form data to an object
    const data = Object.fromEntries(formData);

    // Send a PUT request to the server
    fetch(`/api/students/${data.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    })
    .then(response => response.json())
    .then(data => console.log('Success:', data))
    .catch((error) => console.error('Error:', error));
  });
</script>

    <script>
        // JavaScript functions for handling UI actions
        function editStudent(id) {
    console.log(`Editing student with ID ${id}`); // Log the ID of the student being edited

    // Fetch the student's details
    fetch(`/api/students/${id}`)
        .then(response => {
            if (!response.ok) {
                throw new Error(`Failed to fetch student with ID ${id}`);
            }
            return response.json();
        })
        .then(student => {
            console.log(`Fetched student:`, student); // Log the fetched student

            // Populate the form with the student's details
            document.getElementById('edit-first_name').value = student.first_name;
            document.getElementById('edit-last_name').value = student.last_name;
            // Repeat for other fields...
        })
        .catch(error => console.error('Error:', error));
}
        function deleteStudent(id) {
    if (!confirm('Are you sure you want to delete this student?')) {
        return; // If the user cancels the deletion, do nothing
    }

    fetch(`/api/students/${id}`, {
        method: 'DELETE',
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Failed to delete student');
        }
        location.reload(); // Refresh the page after successful deletion
    })
    .catch(error => console.error('Error deleting student:', error));
}

function updateStudent() {
            const id = document.getElementById('edit-student-id').value;
            const updatedData = {
                first_name: document.getElementById('edit-first_name').value,
                last_name: document.getElementById('edit-last_name').value,
                email: document.getElementById('edit-email').value,
                phone: document.getElementById('edit-phone').value,
                age: document.getElementById('edit-age').value,
                dob: document.getElementById('edit-dob').value,
            };

            fetch(`/api/students/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updatedData),
            })
            .then(response => response.json())
            .then(data => {
                console.log(data);
                location.reload();
            })
            .catch((error) => console.error('Error:', error));
        }
    </script>
</body>

</html>
